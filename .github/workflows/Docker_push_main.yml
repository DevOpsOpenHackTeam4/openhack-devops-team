on: 
  workflow_dispatch:
    inputs:
      workingDirectory:
        description: 'Directory where dockerfile is'     
        required: true
        default: ''
      imageName:
        description: 'Base name for image, should describe what is in the image'
        required: true
        default: '' 
        
name: Linux_Container_Workflow

jobs:

    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@master
          
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        
        - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
            
        - name: Run docker
          working-directory: 'apis/user-java'
          run: |
            docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/devopsoh/api-user-java:${{ github.run_number }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/devopsoh/api-user-java:${{ github.run_number }}
            
        - uses: azure/webapps-deploy@v2
          with:
            app-name: 'openhackvqp9t502userjava-staging'
            images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/devopsoh/api-user-java:${{ github.run_number }}            
            
        - name: Azure CLI script
          uses: azure/CLI@v1
          with:
            azcliversion: 2.0.72
            inlineScript: |
              az webapp deployment slot swap  -g openhackvqp9t502rg -n openhackvqp9t502userjava --slot staging \
              --target-slot production          

